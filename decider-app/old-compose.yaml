services:
  web:
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    ports:
      - '${WEB_IP}:${WEB_PORT}:5000'
    environment:
      FULL_BUILD_MODE: preserve
      DB_HOSTNAME: ${DB_HOSTNAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_PORT: ${DB_PORT}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASS: ${ADMIN_PASS}
      CART_ENC_KEY: ${CART_ENC_KEY}
      WEB_HTTPS_ON: ${WEB_HTTPS_ON}
  db:
    env_file: .env
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    environment:
      POSTGRES_INITDB_ARGS: '--auth=md5'
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_USER: ${DB_USERNAME}
      PGUSER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
